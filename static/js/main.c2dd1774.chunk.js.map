{"version":3,"sources":["assets/zig/zig_____.ttf","constants.js","components/LevelKeyHandler.js","components/Level.js","data/bodies.js","data/selectableMovement.js","data/bodyHistory.js","data/bodiesManager.js","data/loopManager.js","data/levelApi.js","data/levels.js","components/AdminKeyHandler.js","components/Slides.js","App.js","serviceWorker.js","index.js","assets/LD Square.png"],"names":["module","exports","GAME_EVENT","KEYDOWN_KEYS","KEYUP_KEYS","LevelKeyHandler","props","onGameEvent","gameEvent","type","data","handleKeys","onKeyEvent","key","handleEventType","Level","level","onEnterGoal","stageRef","React","useRef","useEffect","current","initialized","init","start","id","ref","handleGameKeyEvent","normalBody","func","tform","spirit","x","y","radius","t","body","Bodies","circle","restitution","render","fillStyle","friction","frictionAir","density","meta","gravity","reversable","goal","width","rectangle","isStatic","isSensor","wallBase","live","color","selectColor","selectable","pushes","fixedRotation","fixedPosition","height","angle","bounded","freezeWall","fixedFreezeWall","pusherWall","staticWall","bound","opacity","SelectableMovement","speed","angularSpeed","startMove","direction","stopMove","getVelocity","getAngularVelocity","isMoving","this","BodyHistory","log","time","lastPos","history","length","position","delta","Vector","sub","push","clear","revertTo","destTime","translate","create","i","Body","splice","TRAITS","BodiesManager","bodiesInitializer","frozenVelocities","activeObjectIndex","selectMovement","normalize","attachEventListeners","registerCollisionListener","key1","key2","callback","id1","bodyMap","id2","Events","on","loop","engine","event","pairs","bodyA","bodyB","unit","update","updatePushes","updateGravityBodies","updateSelectables","updateHistories","updateReversables","updateFixedRotations","updateBoundeds","updateFixedPositions","checkSpiritOutOfBounds","activeId","objectSelectOrder","objIsStatic","metaMap","frozen","byTrait","forEach","setStatic","clearVec","bodyOperation","setVelocity","force","mass","applyForce","mvmt","isSelected","isActive","setColor","setAngularVelocity","histories","getPlayTime","reversed","playTime","setAngle","fixedPositions","setPosition","min","max","onSpiritOutOfBounds","gutter","boundBody","vertices","bodyUL","bodyUR","bodyLR","bodyLL","boundUL","boundLR","xCorrection","yCorrection","bodyTop","Math","bodyLeft","bodyBottom","bodyRight","boundTop","boundLeft","boundBottom","boundRight","freeze","velocity","unfreeze","frozeV","selectNext","newIdx","moveSelected","dir","stopMovingSelected","allBodies","bodyId","trait","undefined","all","LoopManager","onUpdateData","Render","element","options","wireframes","background","world","intervalRef","setInterval","globalTime","blockingEvent","Engine","teardown","clearInterval","stop","World","canvas","remove","setTimeout","context","textures","scale","add","LevelApi","onUpdate","bodies","started","events","shift","executeEvent","e","restart","reverse","forward","console","PLAYABLE_LEVELS","name","ground","pusherBound","pusher","wall1","wall2","wall3","topWall","goalShield","AdminKeyHandler","onSetLevel","onAnyKey","EndSlide","totalRetries","className","style","textAlign","SLIDES","src","titleImg","alt","INSTRUCTION_OVERLAYS","left","top","maxWidth","App","useState","levelIdx","setLevelIdx","setLevel","forceUpdate","slideIdx","setSlideIdx","animate","setAnimate","overlayText","setOverlayText","overlayTextDuration","setOverlayTextDuration","monitorClass","useCRT","toLevel","idx","formatLevelName","Slide","onAnimationEnd","f","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","autoPlayEvents","playMusic","play","removeEventListener","addEventListener"],"mappings":"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","file":"static/js/main.c2dd1774.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/zig_____.fb74ba24.ttf\";","export const DEBUG = false;\n\n// http://mycours.es/crc/00C90226\nconst DARK = \"#03171B\";\nconst MID_DARK = \"#1D3742\";\nconst MID_LIGHT = \"#6D7F8D\";\nconst LIGHT = \"#D7DCE3\";\nconst RED = \"#AD343E\";\nconst DARK_RED = \"#7E262E\";\nconst GREEN = \"#94FBAB\";\n\nexport const GAME_BG = DARK;\nexport const SPIRIT_FILL = LIGHT;\nexport const WALL_FILL_UNSELECTED = MID_LIGHT;\nexport const WALL_FILL_SELECTED = LIGHT;\nexport const GOAL_FILL = GREEN;\nexport const PUSHER_FILL = DARK_RED;\nexport const PUSHER_FILL_SELECTED = RED;\nexport const STATIC_WALL_FILL = MID_DARK;\n\nexport const SPIRIT = \"spirit\";\nexport const GROUND = \"ground\";\nexport const GOAL = \"goal\";\nexport const PUSHER = \"pusher\";\n\nexport const GAME_EVENT = {\n  FREEZE: \"freeze\",\n  RESTART: \"restart\",\n  SELECT: \"select\",\n  REVERSE: \"reverse\",\n  FORWARD: \"forward\",\n  MOVE: \"move\",\n  MOVE_END: \"moveEnd\",\n  ROTATE: \"rotate\",\n  ROTATE_END: \"rotateEnd\"\n};\n\nexport const UP = \"up\";\nexport const DOWN = \"down\";\nexport const LEFT = \"left\";\nexport const RIGHT = \"right\";\nexport const CW = \"cw\";\nexport const CCW = \"ccw\";\n\nexport const LEVEL_WIDTH = 700;\nexport const LOOP_INTERVAL = 10;\nexport const OBJ_VELOCITY = 500; // units per second\nexport const OBJ_VELOCITY_ANGULAR = 20;\nexport const MAX_SPEED = 10000;\nexport const OUTBOUND_GUTTER = 20;\nexport const BOUND_GUTTER = 1;\n\n/* Spirit */\nexport const GRAVITY_X = 0;\nexport const GRAVITY_Y = 0.2;\nexport const REGULAR_AIR_FRICTION = 0.025;\nexport const DENSITY_FREEZE = 0.00001;\nexport const DENSITY_UNFREEZE = 0.001;\n","import React from \"react\";\nimport KeyboardEventHandler from \"react-keyboard-event-handler\";\nimport { UP, DOWN, LEFT, RIGHT, CCW, CW, GAME_EVENT } from \"../constants\";\n\nconst KEYDOWN_KEYS = [\n  \"space\",\n  \"r\",\n  \"ctrl\",\n  \"w\",\n  \"a\",\n  \"s\",\n  \"d\",\n  \"up\",\n  \"left\",\n  \"down\",\n  \"right\",\n  \"q\",\n  \"e\",\n  \"shift\"\n];\n\nconst KEYUP_KEYS = [\n  \"w\",\n  \"a\",\n  \"s\",\n  \"d\",\n  \"up\",\n  \"left\",\n  \"down\",\n  \"right\",\n  \"q\",\n  \"e\",\n  \"shift\"\n];\n\n/**\n *\n * @param {React.PropsWithChildren<{\n *  onGameEvent\n * }>} props\n */\nfunction LevelKeyHandler(props) {\n  const { onGameEvent } = props;\n\n  const gameEvent = (type, data) => onGameEvent({ type, data });\n\n  return (\n    <>\n      <KeyboardEventHandler\n        handleKeys={KEYDOWN_KEYS}\n        onKeyEvent={key => {\n          switch (key) {\n            case \"space\":\n              return gameEvent(GAME_EVENT.FREEZE);\n            case \"r\":\n              return gameEvent(GAME_EVENT.RESTART);\n            case \"ctrl\":\n              return gameEvent(GAME_EVENT.SELECT);\n            case \"w\":\n            case \"up\":\n              return gameEvent(GAME_EVENT.MOVE, UP);\n            case \"s\":\n            case \"down\":\n              return gameEvent(GAME_EVENT.MOVE, DOWN);\n            case \"a\":\n            case \"left\":\n              return gameEvent(GAME_EVENT.MOVE, LEFT);\n            case \"d\":\n            case \"right\":\n              return gameEvent(GAME_EVENT.MOVE, RIGHT);\n            case \"q\":\n              return gameEvent(GAME_EVENT.ROTATE, CCW);\n            case \"e\":\n              return gameEvent(GAME_EVENT.ROTATE, CW);\n            case \"shift\":\n              return gameEvent(GAME_EVENT.REVERSE);\n            default:\n              return;\n          }\n        }}\n      />\n      <KeyboardEventHandler\n        handleEventType=\"keyup\"\n        handleKeys={KEYUP_KEYS}\n        onKeyEvent={key => {\n          switch (key) {\n            case \"w\":\n            case \"up\":\n              return gameEvent(GAME_EVENT.MOVE_END, UP);\n            case \"s\":\n            case \"down\":\n              return gameEvent(GAME_EVENT.MOVE_END, DOWN);\n            case \"a\":\n            case \"left\":\n              return gameEvent(GAME_EVENT.MOVE_END, LEFT);\n            case \"d\":\n            case \"right\":\n              return gameEvent(GAME_EVENT.MOVE_END, RIGHT);\n            case \"q\":\n              return gameEvent(GAME_EVENT.ROTATE_END, CCW);\n            case \"e\":\n              return gameEvent(GAME_EVENT.ROTATE_END, CW);\n            case \"shift\":\n              return gameEvent(GAME_EVENT.FORWARD);\n            default:\n              return;\n          }\n        }}\n      />\n    </>\n  );\n}\n\nexport default LevelKeyHandler;\n","import React from \"react\";\nimport LevelKeyHandler from \"./LevelKeyHandler\";\n\n/**\n *\n * @param {React.PropsWithChildren<{\n *  data: LevelApi,\n *  onEnterGoal: () => void,\n *  onUpdateData: (data: LevelData) => void\n * }>} props\n */\nfunction Level(props) {\n  const { data: level, onEnterGoal } = props;\n  const stageRef = React.useRef();\n\n  React.useEffect(() => {\n    if (!stageRef.current || !level || level.initialized) {\n      return;\n    }\n    level.init(stageRef.current, () => {\n      onEnterGoal();\n    });\n    level.start();\n  }, [stageRef, level, onEnterGoal]);\n\n  return (\n    <>\n      <div id=\"stageInner\" ref={stageRef} />\n      <LevelKeyHandler onGameEvent={level.handleGameKeyEvent} />\n    </>\n  );\n}\n\nexport default Level;\n","import { Bodies } from \"matter-js\";\nimport {\n  REGULAR_AIR_FRICTION,\n  DENSITY_FREEZE,\n  SPIRIT_FILL,\n  WALL_FILL_UNSELECTED,\n  GOAL_FILL,\n  WALL_FILL_SELECTED,\n  PUSHER_FILL,\n  PUSHER_FILL_SELECTED,\n  STATIC_WALL_FILL\n} from \"../constants\";\n\n// All meta props:\n// - gravity\n// - reversable\n// - live\n// - color\n// - selectable\n// - selectColor\n// - pushes\n// - fixedRotation\n// - bounded\n\nconst normalBody = func => tform => func(tform);\n\nexport const spirit = (x, y, radius = 10) =>\n  normalBody(t => ({\n    body: Bodies.circle(t(x), t(y), t(radius), {\n      restitution: 1,\n      render: { fillStyle: SPIRIT_FILL },\n      friction: 0,\n      frictionAir: REGULAR_AIR_FRICTION,\n      density: DENSITY_FREEZE\n    }),\n    meta: {\n      gravity: true,\n      reversable: true\n    }\n  }));\n\nexport const goal = (x, y, width) =>\n  normalBody(t => ({\n    body: Bodies.rectangle(t(x), t(y), t(width), t(width), {\n      isStatic: true,\n      isSensor: true,\n      render: { fillStyle: GOAL_FILL }\n    }),\n    meta: {}\n  }));\n\nconst wallBase = ({\n  live,\n  color,\n  selectColor,\n  selectable,\n  pushes,\n  fixedRotation,\n  fixedPosition\n}) => (x, y, width, height, angle = 0, bounded) =>\n  normalBody(t => ({\n    body: Bodies.rectangle(t(x), t(y), t(width), t(height), {\n      isStatic: true,\n      angle,\n      render: { fillStyle: color },\n      friction: 0,\n      frictionAir: 0\n    }),\n    meta: {\n      live,\n      color,\n      selectColor,\n      selectable,\n      pushes,\n      fixedRotation,\n      bounded,\n      fixedPosition\n    }\n  }));\n\nexport const freezeWall = wallBase({\n  color: WALL_FILL_UNSELECTED,\n  selectColor: WALL_FILL_SELECTED,\n  selectable: true\n});\n\nexport const fixedFreezeWall = wallBase({\n  color: WALL_FILL_UNSELECTED,\n  selectColor: WALL_FILL_SELECTED,\n  selectable: true,\n  fixedPosition: true\n});\n\nexport const pusherWall = wallBase({\n  color: PUSHER_FILL,\n  selectColor: PUSHER_FILL_SELECTED,\n  selectable: true,\n  fixedRotation: true,\n  pushes: true\n});\n\nexport const staticWall = wallBase({\n  color: STATIC_WALL_FILL\n});\n\nexport const bound = (x, y, width, height, color) =>\n  normalBody(t => ({\n    body: Bodies.rectangle(t(x), t(y), t(width), t(height), {\n      isSensor: true,\n      render: { fillStyle: color, opacity: 0.5 }\n    }),\n    meta: {\n      color\n    }\n  }));\n","import { UP, DOWN, LEFT, RIGHT, CW, CCW } from \"../constants\";\n\nexport default class SelectableMovement {\n  speed;\n  angularSpeed;\n\n  constructor(speed, angularSpeed) {\n    this.speed = speed;\n    this.angularSpeed = angularSpeed;\n\n    for (let dir of [UP, DOWN, LEFT, RIGHT, CW, CCW]) {\n      this[dir] = false;\n    }\n  }\n\n  startMove = direction => {\n    this[direction] = true;\n  };\n\n  stopMove = direction => {\n    this[direction] = false;\n  };\n\n  getVelocity = () => {\n    const x =\n      (((this[LEFT] ? -1 : 0) + (this[RIGHT] ? 1 : 0)) * this.speed) / 1000;\n    const y =\n      (((this[UP] ? -1 : 0) + (this[DOWN] ? 1 : 0)) * this.speed) / 1000;\n    return { x, y };\n  };\n\n  getAngularVelocity = () => {\n    return (\n      (((this[CCW] ? -1 : 0) + (this[CW] ? 1 : 0)) * this.angularSpeed) / 1000\n    );\n  };\n\n  isMoving = () => {\n    const { x, y } = this.getVelocity();\n    return x || y || this.getAngularVelocity();\n  };\n}\n","import { Body, Vector } from \"matter-js\";\n\nexport default class BodyHistory {\n  /** @type Matter.Body */\n  body;\n\n  /** @type {Array<{ time: number, position: Matter.Vector, delta: Matter.Vector }>} */\n  history;\n\n  constructor(body) {\n    this.body = body;\n    this.history = [];\n  }\n\n  log = time => {\n    const lastPos = this.history.length\n      ? this.history[this.history.length - 1].position\n      : this.body.position;\n\n    const delta = Vector.sub(this.body.position, lastPos);\n    const { x, y } = this.body.position;\n\n    this.history.push({ time, position: { x, y }, delta });\n  };\n\n  clear = () => {\n    this.history = [];\n  };\n\n  revertTo = destTime => {\n    let translate = Vector.create();\n\n    for (let i = this.history.length - 1; i >= 0; i--) {\n      const { time, delta } = this.history[i];\n      translate = Vector.sub(translate, delta);\n\n      if (time > destTime) {\n        continue;\n      }\n\n      Body.translate(this.body, translate);\n      this.history.splice(i, this.history.length);\n      break;\n    }\n  };\n}\n","import { Body, Events } from \"matter-js\";\nimport {\n  LEVEL_WIDTH,\n  LOOP_INTERVAL,\n  GRAVITY_X,\n  GRAVITY_Y,\n  OBJ_VELOCITY,\n  OBJ_VELOCITY_ANGULAR,\n  SPIRIT,\n  GOAL,\n  OUTBOUND_GUTTER,\n  BOUND_GUTTER\n} from \"../constants\";\nimport SelectableMovement from \"./selectableMovement\";\nimport BodyHistory from \"./bodyHistory\";\n\nconst GRAVITY = \"gravity\";\nconst SELECTABLE = \"selectable\";\nconst REVERSABLE = \"reversable\";\nconst FIXED_ROTATION = \"fixedRotation\";\nconst FIXED_POSITION = \"fixedPosition\";\nconst BOUNDED = \"bounded\";\n\nexport const TRAITS = [\n  GRAVITY,\n  SELECTABLE,\n  REVERSABLE,\n  FIXED_ROTATION,\n  BOUNDED,\n  FIXED_POSITION\n];\n\nexport default class BodiesManager {\n  /** @type LevelApi */\n  level;\n\n  /** @type Matter.Body[] */\n  all;\n\n  /** @type {{ [key: string]: Matter.Body }} */\n  bodyMap;\n\n  /** @type {{ [key: string]: object }} */\n  metaMap;\n\n  /** @type number */\n  activeObjectIndex;\n\n  /** @type {{ [key: string]: Matter.Vector }} */\n  frozenVelocities;\n\n  /** @type {{ [key: string]: string[] }} */\n  byTrait;\n\n  /** @type SelectMovement */\n  selectMovement;\n\n  /** @type {{ [key: string]: BodyHistory }} */\n  histories;\n\n  /** @type {{ [key: string]: Matter.Vector }} */\n  fixedPositions;\n\n  constructor(level, bodiesInitializer) {\n    this.level = level;\n\n    const allBodies = [];\n    const bodyMap = {};\n    const metaMap = {};\n    const histories = {};\n    const fixedPositions = {};\n\n    const byTrait = {};\n    TRAITS.forEach(trait => (byTrait[trait] = []));\n\n    for (let bodyId in bodiesInitializer) {\n      const { body, meta } = bodiesInitializer[bodyId](this.normalize);\n      allBodies.push(body);\n\n      bodyMap[bodyId] = body;\n      metaMap[bodyId] = meta;\n\n      for (let trait of TRAITS) {\n        if (meta[trait] !== undefined) {\n          byTrait[trait].push(bodyId);\n        }\n      }\n\n      if (meta[REVERSABLE]) {\n        histories[bodyId] = new BodyHistory(body);\n      }\n\n      if (meta[FIXED_POSITION]) {\n        const { x, y } = body.position;\n        fixedPositions[bodyId] = { x, y };\n      }\n    }\n\n    this.all = allBodies;\n    this.bodyMap = bodyMap;\n    this.metaMap = metaMap;\n    this.byTrait = byTrait;\n    this.histories = histories;\n    this.fixedPositions = fixedPositions;\n  }\n\n  start = () => {\n    this.frozenVelocities = {};\n    this.activeObjectIndex = 0;\n    this.selectMovement = new SelectableMovement(\n      this.normalize(OBJ_VELOCITY),\n      OBJ_VELOCITY_ANGULAR\n    );\n  };\n\n  attachEventListeners = () => {\n    this.registerCollisionListener(SPIRIT, GOAL, this.level.onEnterGoal);\n  };\n\n  registerCollisionListener = (key1, key2, callback) => {\n    const id1 = this.bodyMap[key1].id;\n    const id2 = this.bodyMap[key2].id;\n\n    Events.on(this.level.loop.engine, \"collisionStart\", event => {\n      for (let { bodyA, bodyB } of event.pairs) {\n        if (\n          (bodyA.id === id1 && bodyB.id === id2) ||\n          (bodyA.id === id2 && bodyB.id === id1)\n        ) {\n          return callback();\n        }\n      }\n    });\n  };\n\n  normalize = unit => (unit / 100) * LEVEL_WIDTH;\n\n  update = () => {\n    this.updatePushes();\n    this.updateGravityBodies();\n    this.updateSelectables();\n    this.updateHistories();\n    this.updateReversables();\n    this.updateFixedRotations();\n    this.updateBoundeds();\n    this.updateFixedPositions();\n\n    this.checkSpiritOutOfBounds();\n  };\n\n  updatePushes = () => {\n    const activeId = this.level.objectSelectOrder[this.activeObjectIndex];\n    const { pushes } = this.metaMap[activeId];\n    const objIsStatic = !pushes && this.level.frozen;\n\n    this.byTrait[GRAVITY].forEach(id => {\n      const body = this.bodyMap[id];\n      if (body.isStatic !== objIsStatic) {\n        Body.setStatic(this.bodyMap[id], objIsStatic);\n      }\n    });\n  };\n\n  updateGravityBodies = () => {\n    const clearVec = { x: 0, y: 0 };\n\n    const bodyOperation = this.level.frozen\n      ? body => {\n          Body.setVelocity(body, clearVec);\n        }\n      : body => {\n          const force = {\n            x: body.mass * ((GRAVITY_X * LOOP_INTERVAL) / 1000),\n            y: body.mass * ((GRAVITY_Y * LOOP_INTERVAL) / 1000)\n          };\n          Body.applyForce(body, body.position, force);\n        };\n\n    this.byTrait[GRAVITY].forEach(id => {\n      bodyOperation(this.bodyMap[id]);\n    });\n  };\n\n  updateSelectables = () => {\n    const activeId = this.level.objectSelectOrder[this.activeObjectIndex];\n\n    this.byTrait[SELECTABLE].forEach(id => {\n      const body = this.bodyMap[id];\n      const {\n        color,\n        selectColor,\n        live,\n        fixedRotation,\n        fixedPosition\n      } = this.metaMap[id];\n\n      const mvmt = this.selectMovement;\n      if (!mvmt.isMoving() && !body.isStatic) {\n        Body.setStatic(body, true);\n      }\n\n      const isSelected = id === activeId;\n      const isActive = !!live !== this.level.frozen;\n\n      let setColor = color;\n      if (isSelected && isActive) {\n        setColor = selectColor;\n        if (mvmt.isMoving()) {\n          Body.setStatic(body, false);\n\n          if (!fixedPosition) {\n            Body.setVelocity(body, mvmt.getVelocity());\n          }\n\n          if (!fixedRotation) {\n            Body.setAngularVelocity(body, mvmt.getAngularVelocity());\n          }\n        }\n      }\n\n      body.render.fillStyle = setColor;\n    });\n  };\n\n  updateHistories = () => {\n    if (this.level.frozen) {\n      return;\n    }\n\n    this.byTrait[REVERSABLE].forEach(id => {\n      this.histories[id].log(this.level.getPlayTime());\n    });\n  };\n\n  updateReversables = () => {\n    if (!this.level.reversed) {\n      return;\n    }\n\n    const playTime = this.level.getPlayTime();\n\n    for (let id in this.histories) {\n      this.histories[id].revertTo(playTime);\n    }\n  };\n\n  updateFixedRotations = () => {\n    this.byTrait[FIXED_ROTATION].forEach(id => {\n      Body.setAngle(this.bodyMap[id], 0);\n    });\n  };\n\n  updateFixedPositions = () => {\n    this.byTrait[FIXED_POSITION].forEach(id => {\n      const { x, y } = this.fixedPositions[id];\n      Body.setPosition(this.bodyMap[id], { x, y });\n    });\n  };\n\n  checkSpiritOutOfBounds = () => {\n    const { x, y } = this.bodyMap[SPIRIT].position;\n    const min = -this.normalize(OUTBOUND_GUTTER);\n    const max = LEVEL_WIDTH + this.normalize(OUTBOUND_GUTTER);\n\n    const outOfBounds = x <= min || y <= min || x >= max || y >= max;\n    if (outOfBounds) {\n      this.level.onSpiritOutOfBounds();\n    }\n  };\n\n  updateBoundeds = () => {\n    const gutter = this.normalize(BOUND_GUTTER);\n\n    this.byTrait[BOUNDED].forEach(id => {\n      const body = this.bodyMap[id];\n      const { bounded } = this.metaMap[id];\n      const boundBody = this.bodyMap[bounded];\n\n      const [bodyUL, bodyUR, bodyLR, bodyLL] = body.vertices;\n      const [boundUL, , boundLR] = boundBody.vertices;\n\n      let xCorrection = 0;\n      let yCorrection = 0;\n\n      const bodyTop = Math.min(bodyUL.y, bodyUR.y);\n      const bodyLeft = Math.min(bodyUL.x, bodyLL.x);\n      const bodyBottom = Math.max(bodyLR.y, bodyLL.y);\n      const bodyRight = Math.max(bodyLR.x, bodyUR.x);\n\n      const boundTop = boundUL.y + gutter;\n      const boundLeft = boundUL.x + gutter;\n      const boundBottom = boundLR.y - gutter;\n      const boundRight = boundLR.x - gutter;\n\n      if (bodyTop < boundTop) {\n        yCorrection += boundTop - bodyTop;\n      }\n      if (bodyBottom > boundBottom) {\n        yCorrection -= bodyBottom - boundBottom;\n      }\n      if (bodyLeft < boundLeft) {\n        xCorrection += boundLeft - bodyLeft;\n      }\n      if (bodyRight > boundRight) {\n        xCorrection -= bodyRight - boundRight;\n      }\n\n      if (xCorrection || yCorrection) {\n        Body.translate(body, { x: xCorrection, y: yCorrection });\n      }\n    });\n  };\n\n  freeze = () => {\n    const frozenVelocities = {};\n\n    this.byTrait[GRAVITY].forEach(id => {\n      const body = this.bodyMap[id];\n      const { x, y } = body.velocity;\n\n      frozenVelocities[id] = { x, y };\n    });\n\n    this.frozenVelocities = frozenVelocities;\n  };\n\n  unfreeze = () => {\n    this.byTrait[GRAVITY].forEach(id => {\n      const frozeV = this.frozenVelocities[id];\n      if (frozeV) {\n        const { x, y } = frozeV;\n        Body.setVelocity(this.bodyMap[id], { x, y });\n      }\n    });\n  };\n\n  selectNext = () => {\n    let newIdx = this.activeObjectIndex + 1;\n    if (newIdx >= this.level.objectSelectOrder.length) {\n      newIdx = 0;\n    }\n    this.activeObjectIndex = newIdx;\n  };\n\n  moveSelected = dir => {\n    this.selectMovement.startMove(dir);\n  };\n\n  stopMovingSelected = dir => {\n    this.selectMovement.stopMove(dir);\n  };\n}\n","import { Engine, World, Render } from \"matter-js\";\nimport { GAME_BG, LEVEL_WIDTH, LOOP_INTERVAL } from \"../constants\";\n\nexport default class LoopManager {\n  /** @type LevelApi */\n  level;\n\n  /** @type Matter.Engine */\n  engine;\n\n  /** @type Matter.Render */\n  render;\n\n  /** @type number */\n  globalTime;\n\n  /** @type number */\n  playTime;\n\n  /** @type number */\n  intervalRef;\n\n  constructor(level, allBodies) {\n    this.level = level;\n    this.globalTime = 0;\n    this.engine = Engine.create();\n    this.engine.world.gravity.scale = 0;\n    World.add(this.engine.world, allBodies);\n  }\n\n  /**\n   * @param {React.ReactInstance} ref\n   * @param {() => void} onEnterGoal\n   * @param {(data: LevelData) => void} onUpdateData\n   */\n  start = (ref, onEnterGoal, onUpdateData) => {\n    this.render = Render.create({\n      element: ref,\n      engine: this.engine,\n      options: {\n        wireframes: false,\n        width: LEVEL_WIDTH,\n        height: LEVEL_WIDTH,\n        background: GAME_BG\n      }\n    });\n\n    Render.world(this.render);\n    this.intervalRef = setInterval(this.update, LOOP_INTERVAL);\n    this.playTime = 0;\n  };\n\n  update = () => {\n    this.globalTime += LOOP_INTERVAL;\n\n    if (this.level.reversed) {\n      this.playTime = Math.max(0, this.playTime - LOOP_INTERVAL);\n    } else if (!this.level.frozen) {\n      this.playTime += LOOP_INTERVAL;\n    }\n\n    if (this.level.blockingEvent) {\n      return;\n    }\n\n    this.level.update();\n\n    Engine.update(this.engine, LOOP_INTERVAL);\n    Render.world(this.render);\n  };\n\n  teardown = () => {\n    this.intervalRef = clearInterval(this.intervalRef);\n\n    Render.stop(this.render);\n    World.clear(this.engine.world);\n    Engine.clear(this.engine);\n\n    this.render.canvas.remove();\n    setTimeout(() => {\n      this.render.canvas = null;\n      this.render.context = null;\n      this.render.textures = {};\n    }, LOOP_INTERVAL);\n  };\n}\n","import BodiesManager from \"./bodiesManager\";\nimport LoopManager from \"./loopManager\";\nimport { GAME_EVENT } from \"../constants\";\n\nexport default class LevelApi {\n  /** @type {{ [id: string]: (t) => { body: Matter.Body, meta } }} */\n  bodiesInitializer;\n\n  /** @type string[] */\n  objectSelectOrder;\n\n  /** @type BodiesManager */\n  bodies;\n\n  /** @type LoopManager */\n  loop;\n\n  /** @type boolean */\n  initialized;\n\n  /** @type boolean */\n  started;\n\n  /** @type boolean */\n  frozen;\n\n  /** @type boolean */\n  reversed;\n\n  /** @type {Array<{type: string, data}>} */\n  events;\n\n  /** @type React.ReactInstance */\n  ref;\n\n  /** @type boolean */\n  blockingEvent;\n\n  /** @type () => void */\n  onEnterGoal;\n\n  constructor(bodiesInitializer, objectSelectOrder) {\n    this.bodiesInitializer = bodiesInitializer;\n    this.objectSelectOrder = objectSelectOrder;\n    this.initialized = false;\n  }\n\n  /**\n   * @param {React.ReactInstance} ref\n   * @param {() => void} onEnterGoal\n   * @param {(data: LevelData) => void} onUpdateData\n   */\n  init = (ref, onEnterGoal, onUpdate) => {\n    this.ref = ref;\n    this.onEnterGoal = onEnterGoal;\n    this.initialized = true;\n  };\n\n  start = () => {\n    this.bodies = new BodiesManager(this, this.bodiesInitializer);\n    this.loop = new LoopManager(this, this.bodies.all);\n\n    this.bodies.start();\n    this.loop.start(this.ref);\n    this.bodies.attachEventListeners();\n\n    this.started = true;\n    this.frozen = true;\n    this.events = [];\n    this.blockingEvent = false;\n  };\n\n  update = () => {\n    if (this.events.length) {\n      this.blockingEvent = true;\n      const event = this.events.shift();\n      this.executeEvent(event);\n      this.blockingEvent = false;\n    }\n\n    this.bodies.update();\n  };\n\n  /**\n   * @param {{type: string, data}}\n   */\n  handleGameKeyEvent = e => {\n    this.events.push(e);\n  };\n\n  executeEvent = ({ type, data }) => {\n    switch (type) {\n      case GAME_EVENT.FREEZE:\n        return this.frozen ? this.unfreeze() : this.freeze();\n      case GAME_EVENT.RESTART:\n        return this.restart();\n      case GAME_EVENT.SELECT:\n        return this.bodies.selectNext();\n      case GAME_EVENT.MOVE:\n      case GAME_EVENT.ROTATE:\n        return this.bodies.moveSelected(data);\n      case GAME_EVENT.MOVE_END:\n      case GAME_EVENT.ROTATE_END:\n        return this.bodies.stopMovingSelected(data);\n      case GAME_EVENT.REVERSE:\n        return this.reverse();\n      case GAME_EVENT.FORWARD:\n        return this.forward();\n      default:\n        console.log(\"not handled\", type);\n    }\n  };\n\n  teardown = () => {\n    this.loop.teardown();\n  };\n\n  restart = () => {\n    this.teardown();\n    this.start();\n  };\n\n  getPlayTime = () => {\n    return this.loop.playTime;\n  };\n\n  freeze = () => {\n    this.frozen = true;\n    this.bodies.freeze();\n  };\n\n  unfreeze = () => {\n    this.frozen = false;\n    this.bodies.unfreeze();\n  };\n\n  reverse = () => {\n    this.freeze();\n    this.reversed = true;\n  };\n\n  forward = () => {\n    this.reversed = false;\n  };\n\n  onSpiritOutOfBounds = () => {\n    this.restart();\n  };\n}\n","import {\n  spirit,\n  freezeWall,\n  goal,\n  staticWall,\n  pusherWall,\n  bound,\n  fixedFreezeWall\n} from \"./bodies\";\nimport { GROUND, PUSHER, PUSHER_FILL } from \"../constants\";\nimport LevelApi from \"./levelApi\";\n\nexport const PLAYGROUND = () =>\n  new LevelApi(\n    {\n      spirit: spirit(50, 50, 2),\n      ground: freezeWall(50, 90, 60, 2),\n      wall1: freezeWall(20, 50, 40, 2, 0.5),\n      wall2: freezeWall(80, 30, 30, 2, -0.5),\n      pusher: pusherWall(20, 80, 8, 8),\n      goal: goal(90, 90, 4)\n    },\n    [GROUND, \"wall1\", \"wall2\", PUSHER]\n  );\n\nexport const LANDER = () =>\n  new LevelApi(\n    {\n      spirit: spirit(10, 10, 2),\n      ground: freezeWall(42, 80, 80, 2),\n      goal: goal(90, 90, 4)\n    },\n    [GROUND]\n  );\n\nexport const LANDERER = () =>\n  new LevelApi(\n    {\n      spirit: spirit(10, 10, 2),\n      ground: freezeWall(42, 80, 30, 2),\n      goal: goal(90, 90, 4)\n    },\n    [GROUND]\n  );\n\nexport const PUSH = () =>\n  new LevelApi(\n    {\n      goal: goal(90, 90, 4),\n      spirit: spirit(20, 10, 2),\n      pusherBound: bound(45, 60, 80, 10, PUSHER_FILL),\n      pusher: pusherWall(10, 60, 8, 8, 0, \"pusherBound\"),\n      ground: staticWall(20, 30, 30, 2, 0.5)\n    },\n    [PUSHER]\n  );\n\nexport const TOWER = () =>\n  new LevelApi(\n    {\n      goal: goal(50, 20, 4),\n      spirit: spirit(20, 10, 2),\n      pusherBound: bound(50, 90, 90, 10, PUSHER_FILL),\n      pusher: pusherWall(90, 90, 8, 8, 0, \"pusherBound\"),\n      wall1: staticWall(50, 10, 24, 2),\n      wall2: staticWall(39, 45, 2, 70),\n      wall3: staticWall(61, 45, 2, 70)\n    },\n    [PUSHER]\n  );\n\nexport const PLATEAU = () =>\n  new LevelApi(\n    {\n      goal: goal(20, 80, 4),\n      spirit: spirit(10, 5, 2),\n      topWall: fixedFreezeWall(40, 30, 70, 2),\n      goalShield: staticWall(20, 65, 50, 2, -0.5),\n      pusherBound: bound(80, 80, 38, 38, PUSHER_FILL),\n      pusher: pusherWall(90, 90, 8, 8, 0, \"pusherBound\")\n    },\n    [\"topWall\", PUSHER]\n  );\n\nexport const PLAYABLE_LEVELS = [\n  { name: \"Lander\", level: LANDER },\n  { name: \"Landerer\", level: LANDERER },\n  { name: \"Push\", level: PUSH },\n  { name: \"Tower\", level: TOWER },\n  { name: \"Plateau\", level: PLATEAU }\n];\n","import React from \"react\";\nimport KeyboardEventHandler from \"react-keyboard-event-handler\";\nimport { DEBUG } from \"../constants\";\n\nfunction AdminKeyHandler(props) {\n  const { onSetLevel, onAnyKey } = props;\n\n  return (\n    <>\n      <KeyboardEventHandler\n        handleKeys={[\"numeric\"]}\n        onKeyEvent={key => {\n          if (DEBUG) {\n            onSetLevel(Number(key));\n          }\n        }}\n      />\n      <KeyboardEventHandler handleKeys={[\"all\"]} onKeyEvent={onAnyKey} />\n    </>\n  );\n}\n\nexport default AdminKeyHandler;\n","import React from \"react\";\nimport titleImg from \"../assets/LD Square.png\";\n\nexport function TitleSlide() {\n  return <img src={titleImg} alt=\"PlayBack Title\" />;\n}\n\nexport function IntroSlide() {\n  return (\n    <div className=\"TutorialSlide\">\n      <div>It is a warm Wednesday night the summer after you turned ten.</div>\n      <div>\n        Searching for something to do at your grandparents' house, you stumble\n        upon a dusty old TV with a VCR.\n      </div>\n      <div>Something about the VCR calls to you.</div>\n      <div>\n        Suddenly, a tiny orb blinks onto the screen. \"Save me\" it says....\n      </div>\n      <div style={{ opacity: 0.3 }}>Press any key to continue.</div>\n    </div>\n  );\n}\n\nexport function EndSlide(props) {\n  const { totalRetries } = props;\n  return (\n    <div className=\"TutorialSlide\">\n      <div>\n        As you roll the orb into the last goal, the VHS sputters out. For the\n        last time, you guess.\n      </div>\n      <div>From far away, you hear a quiet voice: \"My thanks\"</div>\n      {/* <div>Total Retries: {totalRetries}</div> */}\n      <div style={{ opacity: 0.6 }}>\n        {\n          \"Thank you for playing Play<<Back! This game was created in 48 hours for Ludum Dare 46. If you have any feedback, go to github.com/jcowman2/play-back\"\n        }\n      </div>\n      <div style={{ opacity: 0.6, textAlign: \"right\" }}>-Joe</div>\n    </div>\n  );\n}\n\nexport const SLIDES = [TitleSlide, IntroSlide];\n","import React from \"react\";\nimport Level from \"./components/Level\";\nimport { PLAYABLE_LEVELS } from \"./data/levels\";\nimport AdminKeyHandler from \"./components/AdminKeyHandler\";\nimport \"./CRT.scss\";\nimport \"./assets/zig/zig_____.ttf\";\nimport { SLIDES, EndSlide } from \"./components/Slides\";\n\nconst useCRT = () => {\n  const [animate, setAnimate] = React.useState(true);\n  const [overlayText, setOverlayText] = React.useState(\"INPUT\");\n\n  const [overlayTextDuration, setOverlayTextDuration] = React.useState(3000);\n\n  React.useEffect(() => {\n    if (!overlayText || overlayTextDuration < 0) {\n      return;\n    }\n    setTimeout(() => setOverlayText(null), overlayTextDuration);\n  }, [overlayText, overlayTextDuration]);\n\n  const monitorClass = \"Monitor\" + (animate ? \" TurnOn\" : \"\");\n\n  return {\n    setAnimate,\n    monitorClass,\n    overlayText,\n    setOverlayText,\n    setOverlayTextDuration\n  };\n};\n\nconst formatLevelName = idx => `${idx + 1}: ${PLAYABLE_LEVELS[idx].name}`;\n\nconst INSTRUCTION_OVERLAYS = [\n  <div style={{ left: 400, top: 50, maxWidth: 300 }}>\n    <div>Try to get the ball into the goal.</div>\n    <div>Use WASD to move the platform, and QE to rotate it.</div>\n    <div>Hit play/pause with SPACE.</div>\n  </div>,\n  <div style={{ left: 300, top: 150, maxWidth: 400 }}>\n    <div>You can use time to your advantage!</div>\n    <div>Press R to retry.</div>\n  </div>,\n  <div style={{ left: 300, top: 100, maxWidth: 400 }}>\n    <div>\n      Red walls can push the orb around when time is stopped, but they can't\n      leave their area.\n    </div>\n  </div>,\n  <div style={{ left: 220, top: 10, maxWidth: 400 }}>\n    <div>Hold SHIFT to rewind!</div>\n  </div>,\n  <div style={{ left: 220, top: 10, maxWidth: 400 }}>\n    <div>Press CTRL to switch control between blocks.</div>\n    <div>Some blocks can only rotate in place.</div>\n  </div>\n];\n\nfunction App() {\n  const [levelIdx, setLevelIdx] = React.useState();\n  const [level, setLevel] = React.useState();\n  const [, forceUpdate] = React.useState(0);\n  const [slideIdx, setSlideIdx] = React.useState(0);\n\n  const { setAnimate, monitorClass, overlayText, setOverlayText } = useCRT();\n\n  const toLevel = idx => {\n    if (level) {\n      level.teardown();\n    }\n\n    setLevelIdx(idx);\n    setLevel(PLAYABLE_LEVELS[idx].level());\n    setAnimate(true);\n    setOverlayText(formatLevelName(idx));\n  };\n\n  const handleEnterGoal = () => {\n    if (levelIdx === PLAYABLE_LEVELS.length - 1) {\n      setLevel(null);\n      setSlideIdx(-1);\n    } else {\n      toLevel(levelIdx + 1);\n    }\n  };\n\n  const handleAnyKey = () => {\n    if (level) {\n      return;\n    }\n    if (slideIdx === SLIDES.length - 1) {\n      toLevel(0);\n    } else {\n      setSlideIdx(i => i + 1);\n    }\n  };\n\n  const totalRetries = 0;\n\n  const Slide =\n    slideIdx < 0 ? (\n      <EndSlide totalRetries={totalRetries} />\n    ) : (\n      SLIDES[slideIdx]()\n    );\n\n  return (\n    <div className=\"App\">\n      <div className={monitorClass} onAnimationEnd={() => setAnimate(false)}>\n        <div className=\"Screen\">\n          {level ? (\n            <>\n              <div className=\"InstructionOverlay\">\n                {INSTRUCTION_OVERLAYS[levelIdx]}\n              </div>\n              <Level\n                data={level}\n                onUpdateData={() => {\n                  forceUpdate(f => f + 1);\n                }}\n                onEnterGoal={handleEnterGoal}\n              />\n            </>\n          ) : (\n            Slide\n          )}\n        </div>\n        <div className=\"Overlay\">{overlayText}</div>\n      </div>\n\n      <AdminKeyHandler onSetLevel={toLevel} onAnyKey={handleAnyKey} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nconst autoPlayEvents = [\"mousedown\", \"keydown\"];\n\nconst playMusic = () => {\n  document.getElementById(\"music\").play();\n  for (let element of autoPlayEvents) {\n    document.removeEventListener(element, playMusic);\n  }\n};\n\nfor (let element of autoPlayEvents) {\n  document.addEventListener(element, playMusic);\n}\n","module.exports = __webpack_public_path__ + \"static/media/LD Square.ad3b42a3.png\";"],"sourceRoot":""}